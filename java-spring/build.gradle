plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.5'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'gg.jte.gradle' version '3.1.16'
    id("com.google.protobuf") version "0.9.4"
}
ext {
    springGrpcVersion = "0.10.0"
    springCloudGcpVersion = "7.3.0"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
description = 'CLEAR-CARD'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-freemarker'
    implementation 'org.springframework.boot:spring-boot-starter-groovy-templates'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-mustache'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-authorization-server'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'gg.jte:jte-spring-boot-starter-3:3.1.16'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-integration'
    implementation 'org.springframework.grpc:spring-grpc-spring-boot-starter'
    implementation 'com.google.cloud:spring-cloud-gcp-starter-storage'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.9"
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.apache.commons:commons-csv:1.11.0'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.microsoft.sqlserver:mssql-jdbc'
    //runtimeOnly 'io.r2dbc:r2dbc-h2'
    //runtimeOnly 'io.r2dbc:r2dbc-mssql:1.0.0.RELEASE'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // Align all gRPC artifacts
    implementation(platform("io.grpc:grpc-bom:1.66.0"))
    implementation("io.grpc:grpc-netty-shaded")
    implementation("io.grpc:grpc-protobuf")
    implementation("io.grpc:grpc-stub")

    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    runtimeOnly 'com.microsoft.sqlserver:mssql-jdbc'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly  'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly  'io.jsonwebtoken:jjwt-jackson:0.11.5' // for JSON serializer

    // Protobuf runtime
    implementation("com.google.protobuf:protobuf-java:3.25.3")

    // Needed for @Generated on some JDKs
    compileOnly("javax.annotation:javax.annotation-api:1.3.2")
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.25.3"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:1.66.0"
        }
    }
    generateProtoTasks {
        // Attach the grpc plugin to the MAIN source set only (clear and reliable)
        ofSourceSet('main').each { task ->
            // ensure java messages are generated (usually default, but make it explicit)
            task.builtins {
                java { }
            }
            // add grpc stubs generation
            task.plugins {
                grpc { }
            }
        }
    }
}

sourceSets {
    main {
        java {
            // helps IntelliJ pick up generated sources
            srcDir 'build/generated/source/proto/main/java'
            srcDir 'build/generated/source/proto/main/grpc'
        }
    }
}


jte {
    generate()
    binaryStaticContent = true
}
dependencyManagement {
    imports {
        mavenBom "org.springframework.grpc:spring-grpc-dependencies:$springGrpcVersion"
        mavenBom "com.google.cloud:spring-cloud-gcp-dependencies:$springCloudGcpVersion"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
